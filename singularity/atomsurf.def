Bootstrap: docker
From: continuumio/miniconda3:latest

%setup
    if [ ! -d atomsurf ];then
        git clone https://github.com/Vincentx15/atomsurf.git
    fi

%files
    atomsurf /opt/atomsurf

%environment
    # Set the default conda environment for convenience
    export CONDA_DEFAULT_ENV="atomsurf"
    # Add the conda environment's bin directory to PATH
    export PATH="/opt/conda/envs/atomsurf/bin:$PATH"
    # Essential for CUDA applications to find libraries, especially when running on a host with NVIDIA GPUs
    export LD_LIBRARY_PATH="/usr/local/nvidia/lib:/usr/local/nvidia/lib64:$LD_LIBRARY_PATH"
    # Set the Python path to include the atomsurf package for proper imports
    export PYTHONPATH="/opt/atomsurf:$PYTHONPATH"

%post
    echo "Creating conda environment 'atomsurf' with Python 3.8..."
    conda create -n atomsurf python=3.8 -y

    echo "Activating conda environment for installations..."
    # Source the conda initialization script to make 'conda activate' available
    . /opt/conda/etc/profile.d/conda.sh
    conda activate atomsurf

    echo "Installing PyTorch 1.13 with CUDA 11.7 and PyG 2.3.0 dependencies..."
    conda install cudatoolkit=11.7 -c nvidia -y
    conda install pytorch=1.13 pytorch-cuda=11.7 -c pytorch -c nvidia -y
    conda install pyg=2.3.0 pytorch-scatter pytorch-sparse pytorch-spline-conv pytorch-cluster -c pyg -y

    # Install pyg-lib using pip, ensuring it targets the correct PyTorch/CUDA version
    pip install pyg-lib==0.4.0 -f https://data.pyg.org/whl/torch-1.13.0+cu117.html

    echo "Installing diffusion-net-plus..."
    pip install git+https://github.com/pvnieo/diffusion-net-plus.git

    echo "Installing other dependencies from requirements.txt..."
    # Change to the application directory to find requirements.txt
    (cd /opt/atomsurf && pip install -r requirements.txt)

    echo "Verifying AtomSurf installation by running the example script (this may generate output files)..."
    # Change to the application directory and ensure PYTHONPATH is set for the example script
    (cd /opt/atomsurf && export PYTHONPATH="/opt/atomsurf:$PYTHONPATH" && python example.py)

    echo "Verifying CUDA availability (requires NVIDIA drivers on host to return True)..."
    # Run python from the activated environment
    python -c "import torch; print(torch.cuda.is_available())"

%labels
    Author Vincent Mallet, Adapted by Code Llama
    Version v1.0
    Description AtomSurf: Learnable protein structure encoder jointly encoding graphs and surfaces.
    Homepage https://github.com/Vincentx15/atomsurf

%runscript
    echo "Running the AtomSurf example.py script. Any arguments will be passed to it."
    # Change to the application directory where example.py expects to run
    cd /opt/atomsurf
    # Source conda init script and activate environment
    . /opt/conda/etc/profile.d/conda.sh
    conda activate atomsurf
    # PYTHONPATH is already set in %environment, but re-exporting here for clarity and robustness
    export PYTHONPATH="/opt/atomsurf:$PYTHONPATH"
    # Execute the example script
    exec python example.py "$@"

%startscript
    echo "Starting a shell with the AtomSurf conda environment activated."
    # Change to the application directory
    cd /opt/atomsurf
    . /opt/conda/etc/profile.d/conda.sh
    conda activate atomsurf
    export PYTHONPATH="/opt/atomsurf:$PYTHONPATH"
    exec "$@"

%help
    This Apptainer container provides the AtomSurf environment for protein structure encoding.

    Usage:
        apptainer run <image_name> [args]
            Runs the default example.py script from the /opt/atomsurf directory.
            Arguments are passed to example.py.

        apptainer shell <image_name>
            Spawns an interactive shell inside the container, starting in /opt/atomsurf,
            with the atomsurf conda environment activated.

        apptainer exec <image_name> <command>
            Executes a command inside the container with the atomsurf conda
            environment activated, starting in /opt/atomsurf. For example:
            apptainer exec <image_name> python atomsurf/tasks/masif_ligand/train.py

    The source code for AtomSurf is located at /opt/atomsurf.
    The example data and any generated output from example.py will be in /opt/atomsurf/example_data.
