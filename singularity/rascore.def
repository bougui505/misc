Bootstrap: docker
From: conda/miniconda3:latest

%labels
    Author A-Thakkar, cthoyt, tblaschke, EBjerrum
    Version 1.0
    Description Retrosynthetic Accessibility (RA) score learned from computer aided synthesis planning

%post
    set -e # Exit immediately if a command exits with a non-zero status

    # Overwrite sources.list with a minimal, working set of archive repositories for Debian Stretch.
    # This addresses the recurring 404 errors with Debian Stretch security update mirrors.
    echo "deb http://archive.debian.org/debian stretch main" > /etc/apt/sources.list

    # Update apt and install necessary system tools for cloning and unzipping
    apt-get update && apt-get install -y --allow-unauthenticated \
        git \
        wget \
        unzip \
        build-essential \
        --no-install-recommends

    # Clean up apt lists to reduce the final image size
    rm -rf /var/lib/apt/lists/*

    # Install RDKit via conda, as recommended by RAscore documentation, to ensure compatibility
    conda install -c rdkit rdkit -y

    # Clone the RAscore repository into /opt/RAscore
    git clone https://github.com/reymond-group/RAscore.git /opt/RAscore
    cd /opt/RAscore

    # Install RAscore in editable mode. This sets up the package and its command-line interface.
    pip install --editable .

    # Install specific versions of dependencies as noted in RAscore's "Known Installation Issues".
    # These versions are critical for compatibility with the pretrained models.
    pip install \
        scikit-learn==0.22.1 \
        xgboost==1.0.2 \
        tensorflow-gpu==2.5.0

    # Unzip the pretrained models if the models.zip file exists within the cloned repository.
    # This makes the models accessible for RAscore predictions.
    if [ -f RAscore/models/models.zip ]; then
        unzip RAscore/models/models.zip -d RAscore/models
    fi

    # Clean up pip cache to reduce the final image size
    pip cache purge

%runscript
    # Execute the RAscore command-line interface with all arguments passed to the container
    exec RAscore "$@"

%help
    This Apptainer container provides the Retrosynthetic Accessibility (RA) score
    tool from the reymond-group/RAscore GitHub repository.

    The container includes:
    - A Python 3.7 environment with Miniconda.
    - RDKit, scikit-learn (0.22.1), xgboost (1.0.2), and tensorflow-gpu (2.5.0).
    - The RAscore library and its command-line interface.
    - Pretrained models, unzipped and ready for use.

    To build the container:
        apptainer build rascore.sif rascore.def

    To use the RAscore command-line interface, for example, to score a SMILES file:
        apptainer run rascore.sif RAscore -f <input_smiles_file> -c SMILES -o <output_csv_file>

    Please note: If you intend to utilize GPU capabilities with 'tensorflow-gpu', ensure
    your Apptainer setup and host system are configured for CUDA. If you encounter
    GPU-related issues, you might consider using an NVIDIA CUDA-enabled base image
    instead of the default Miniconda one.
