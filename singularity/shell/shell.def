BOOTSTRAP: docker
FROM: debian:11.5

# Get a ZSH user shell in a singularity container
# Run it with:
# singularity run --cleanenv shell.sif

%post
apt-get update
apt-get install -y git
apt-get install -y wget
apt-get install -y zsh
apt-get install -y fzf
apt-get install -y exa

# nvim
apt-get install -y neovim
touch /usr/local/etc/init.vim
echo "
alias vim='nvim -u /usr/local/etc/init.vim'
alias nvim='nvim -u /usr/local/etc/init.vim'
" >> /etc/zsh/zshenv

# vim-plug
cd /opt
mkdir /opt/nvim-plugged
mkdir /usr/local/etc/nvim
mkdir /usr/local/etc/nvim/autoload
wget https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
mv plug.vim /usr/local/etc/nvim/autoload

# nvim plugins
echo "
set rtp+=/usr/local/etc/nvim

set foldmethod=indent
nnoremap <space> za
vnoremap <space> zf
set foldlevel=99  \" Open file totally unfolded

call plug#begin('/opt/nvim-plugged')
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'dense-analysis/ale'
Plug 'davidhalter/jedi-vim'
Plug 'Shougo/echodoc.vim'
Plug 'preservim/tagbar'
Plug 'pixelneo/vim-python-docstring'
Plug 'pseewald/vim-anyfold'
Plug 'christoomey/vim-tmux-navigator'
Plug 'airblade/vim-gitgutter'
call plug#end()
" >> /usr/local/etc/init.vim

apt-get install -y flake8
apt-get install -y yapf3 python3-yapf
cd /usr/bin/
ln -s yapf3 yapf
cd -
# apt-get install -y pylint
nvim -u /usr/local/etc/init.vim +PlugInstall +qall

echo "
let g:airline_theme='papercolor'
let g:airline#extensions#tagbar#enabled = 1

\" Only run linters named in ale_linters settings.
let g:ale_linters_explicit = 1
let g:ale_linters = {'python': ['flake8']}
let g:ale_fixers = {'python': ['yapf']}
let g:ale_fix_on_save = 1
let g:ale_lint_on_text_changed = 1
let g:ale_sign_priority = 0

let g:jedi#popup_on_dot = 0
let g:jedi#use_splits_not_buffers = 'winwidth'
let g:jedi#show_call_signatures = \"0\"

set cmdheight=2
let g:echodoc#enable_at_startup = 1

\"tagbar configuration
noremap tt :TagbarToggle<CR>
let g:tagbar_sort = 0  \" Do not sort tags
noremap t :TagbarOpen j<CR>

autocmd Filetype * AnyFoldActivate
let g:anyfold_fold_comments=1

let g:gitgutter_max_signs=10000
let g:gitgutter_override_sign_column_highlight = 0
let g:gitgutter_preview_win_floating = 0
\"let g:gitgutter_highlight_lines = 1
\" No line highlight for deletions  
\" highlight GitGutterDeleteLine ctermfg=0 ctermbg=0
\" Use fontawesome icons as signs
let g:gitgutter_sign_added = '+'
let g:gitgutter_sign_modified = '>'
let g:gitgutter_sign_removed = '-'
let g:gitgutter_sign_removed_first_line = '^'
let g:gitgutter_sign_modified_removed = '<'

let g:gitgutter_sign_priority = 0
let g:gitgutter_sign_allow_clobber = 0
\" colors for signs:
highlight GitGutterAdd ctermbg=Green
highlight GitGutterDelete ctermbg=Red
highlight GitGutterChange ctermbg=Blue
\" Key map for hunks
nmap ghs <Plug>(GitGutterStageHunk)
nmap ghu <Plug>(GitGutterUndoHunk)
nmap ghp <Plug>(GitGutterPreviewHunk)
\" Update sign column every quarter second
set updatetime=250

let g:tmux_navigator_no_mappings = 1
nnoremap <silent> <S-Left> :TmuxNavigateLeft<cr>
nnoremap <silent> <S-Down> :TmuxNavigateDown<cr>
nnoremap <silent> <S-Up> :TmuxNavigateUp<cr>
nnoremap <silent> <S-Right> :TmuxNavigateRight<cr>

autocmd BufNewFile *.sh 0r ~/config/sh_template_file.sh
autocmd BufNewFile *.py 0r ~/config/py_template_file.py
" >> /usr/local/etc/init.vim

# PURE ZSH PROMPT
cd /opt
git clone https://github.com/sindresorhus/pure.git
echo "fpath+=(/opt/pure)
autoload -U promptinit
promptinit
prompt pure
export PURE_PROMPT_SYMBOL='❮container❯'" >> /etc/zsh/zshenv 
chmod g-w,o-w /opt/pure

# zsh-histdb
apt-get install -y sqlite3
apt-get install -y bsdextrautils  # for column utility
cd /opt
git clone https://github.com/larkery/zsh-histdb
echo "source /opt/zsh-histdb/sqlite-history.zsh
autoload -Uz add-zsh-hook
source /opt/zsh-histdb/histdb-interactive.zsh
bindkey '^r' _histdb-isearch
" >> /etc/zsh/zshenv

# fzf-tab
cd /opt
git clone https://github.com/Aloxaf/fzf-tab.git
echo "
autoload -U compinit
compinit
source /opt/fzf-tab/fzf-tab.plugin.zsh
" >> /etc/zsh/zshenv

# zsh-syntax-highlighting
cd /opt
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
echo "
source /opt/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
" >> /etc/zsh/zshenv

# zsh-histdb-fzf
cd /opt
git clone https://github.com/m42e/zsh-histdb-fzf.git
echo "
source /opt/zsh-histdb-fzf/fzf-histdb.zsh
# histdb-fzf-widget_dir () {histdb-fzf-widget -d}
# zle -N histdb-fzf-widget_dir
bindkey '^R' histdb-fzf-widget
" >> /etc/zsh/zshenv

apt-get clean

%environment
export SHELL=/usr/bin/zsh
export PATH=$PATH:$HOME/bin

%runscript
zsh --no-rcs
