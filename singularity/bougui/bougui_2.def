BOOTSTRAP: localimage
FROM: bougui_1.sif

# Everything there is to install atomsurf
# see: https://github.com/Vincentx15/atomsurf

%files

%post
export PIP_CACHE_DIR="/tmp/pip/cache"
mkdir -p "$PIP_CACHE_DIR"
python3 -m pip config set global.break-system-packages true # See: https://stackoverflow.com/a/75722775/1679629

################################# APT INSTALL #################################
export DEBIAN_FRONTEND=noninteractive
mkdir -p /tmp/apt/cache
mkdir -p /tmp/apt/lists
mkdir -p /tmp/apt/archives/partial
echo 'Dir::Cache "/tmp/apt/cache";' > /etc/apt/apt.conf.d/99custom
echo 'Dir::State::Lists "/tmp/apt/lists";' >> /etc/apt/apt.conf.d/99custom

apt-get update
apt-get install -y python3-open3d libeigen3-dev libboost-all-dev libglfw3-dev libglew-dev libpng-dev libtinyxml2-dev libxinerama-dev libxcursor-dev libxi-dev libmpfr-dev tree
# apt-get install -y python3-pip
###############################################################################

python3 -m pip install cmake && export PATH="/usr/local/bin:$PATH"  # recent cmake needed to build libigl
which cmake
cmake --version
# Install libigl Python bindings manually

# Install libigl Python bindings manually
cd /opt
git clone --depth 1 --branch 2.4.1 https://github.com/libigl/libigl-python-bindings.git
cd libigl-python-bindings

# Initialize and update submodules, which includes numpyeigen
git submodule update --init --recursive

# List files
tree

# The previous 'sed' command failed because numpyeigen is fetched by CMake's FetchContent
# *during* the configure step, not present in the source tree initially.
# To patch numpyeigen.cmake, we must perform a multi-stage CMake build:
# 1. Configure to allow FetchContent to download dependencies.
# 2. Patch the downloaded numpyeigen.cmake file within the build directory.
# 3. Re-configure (if necessary, though patch is likely picked up automatically) and build/install.

# Create a build directory
mkdir build

# Configure libigl-python-bindings. This will download libigl, which in turn downloads numpyeigen.
# We allow this initial configure step to potentially fail due to numpyeigen's old CMake version,
# so we can then patch it.
cmake -S . -B build \
    -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \
    -DPYTHON_EXECUTABLE="$(which python3)" \
    -DCMAKE_INSTALL_PREFIX="/usr/local" || true

# Patch numpyeigen's CMakeLists.txt within the build tree.
# The path reflects the nested FetchContent structure:
# libigl-python-bindings's build directory -> libigl source -> numpyeigen source
sed -i 's/cmake_minimum_required(VERSION 3.0.0)/cmake_minimum_required(VERSION 3.5)/' "build/_deps/libigl-src/_deps/numpyeigen-src/cmake/numpyeigen.cmake"

# Now, build and install. The `install` target for scikit-build/pybind11 projects
# typically places the generated Python package into the system's site-packages.
cmake --build build --target install --config Release

################################# ATOMSURF #################################
pip install --break-system-packages --cache-dir "$PIP_CACHE_DIR" torch-sparse torch-scatter
pip install pyg-lib -f https://data.pyg.org/whl/torch-2.8.0+cu128.html
cd /opt
git clone --depth 1 https://github.com/Vincentx15/atomsurf.git
cd atomsurf
rm -rf .git
# Remove open3d from requirements.txt as it is installed via apt-get
sed -i '/open3d/d' requirements.txt
# Pandas is already installed
sed -i '/pandas==1.1.3/d' requirements.txt
sed -i '/biopython==1.81/d' requirements.txt
sed 's/^deltaconv==1.0.2/deltaconv/' requirements.txt
sed -i '/libigl/d' requirements.txt # <--- REMOVE libigl here
# Install diffusion-net-plus and atomsurf requirements using python3 (which is Python 3.12 in Trixie)
python3 -m pip install --break-system-packages --cache-dir "$PIP_CACHE_DIR" git+https://github.com/pvnieo/diffusion-net-plus.git
python3 -m pip install --break-system-packages --cache-dir "$PIP_CACHE_DIR" -r requirements.txt
# Link repository to system python libraries
# cd /usr/local/lib/python3.13/dist-packages
# ln -s /opt/atomsurf/atomsurf .
############################################################################

# %runscript
# cmd $@
