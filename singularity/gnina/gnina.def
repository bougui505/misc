BOOTSTRAP: docker
FROM: nvidia/cuda:12.3.2-devel-ubuntu22.04

%post
export DEBIAN_FRONTEND=noninteractive
mkdir -p /tmp/apt/cache
mkdir -p /tmp/apt/lists
echo 'Dir::Cache "/tmp/apt/cache";' > /etc/apt/apt.conf.d/99custom
echo 'Dir::State::Lists "/tmp/apt/lists";' >> /etc/apt/apt.conf.d/99custom
mkdir -p /tmp/pip/cache
cd /opt
apt-get update -y
apt-get install build-essential -y wget -y libboost-all-dev -y libeigen3-dev -y libgoogle-glog-dev -y libprotobuf-dev -y protobuf-compiler -y libhdf5-dev -y libatlas-base-dev -y python3-dev -y librdkit-dev -y python3-numpy -y python3-pip -y python3-pytest -y swig -y
apt update
apt upgrade -y
apt-get -y install build-essential git wget libboost-all-dev libeigen3-dev libgoogle-glog-dev libprotobuf-dev protobuf-compiler libhdf5-dev libatlas-base-dev python3-dev librdkit-dev python3-numpy python3-pip python3-pytest libjsoncpp-dev
apt-get update -y && apt-get install git-all -y curl && apt-get update -y
pip3 --cache-dir=/tmp/pip/cache install cmake scikit-image pyquaternion google-api-python-client six
pip3 --cache-dir=/tmp/pip/cache install torch torchvision torchaudio

cd /opt
git clone https://github.com/openbabel/openbabel.git && cd openbabel &&  git checkout openbabel-3-1-1 && mkdir build && cd build && cmake -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON .. && make -j4 && make install

cd /opt
git clone https://github.com/gnina/gnina.git
cd gnina
mkdir build
cd build
cmake ..
make -j4
make install
